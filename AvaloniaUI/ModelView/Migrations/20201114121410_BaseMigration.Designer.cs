// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelView.DataBaseClasses;

namespace ModelView.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201114121410_BaseMigration")]
    partial class BaseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ImageDetailDBProcessedImageDB", b =>
                {
                    b.Property<int>("AdditionalInfoImageDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrimaryInfoImageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdditionalInfoImageDetailId", "PrimaryInfoImageId");

                    b.HasIndex("PrimaryInfoImageId");

                    b.ToTable("ImageDetailDBProcessedImageDB");
                });

            modelBuilder.Entity("ModelView.DataBaseClasses.ImageDetailDB", b =>
                {
                    b.Property<int>("ImageDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ByteImage")
                        .HasColumnType("BLOB");

                    b.HasKey("ImageDetailId");

                    b.ToTable("ImageDetails");
                });

            modelBuilder.Entity("ModelView.DataBaseClasses.ProcessedImageDB", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageLabel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageName")
                        .HasColumnType("TEXT");

                    b.HasKey("ImageId");

                    b.ToTable("ProcessedImages");
                });

            modelBuilder.Entity("ImageDetailDBProcessedImageDB", b =>
                {
                    b.HasOne("ModelView.DataBaseClasses.ImageDetailDB", null)
                        .WithMany()
                        .HasForeignKey("AdditionalInfoImageDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelView.DataBaseClasses.ProcessedImageDB", null)
                        .WithMany()
                        .HasForeignKey("PrimaryInfoImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
